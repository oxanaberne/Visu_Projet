import graphs.graph_performance as gp

def sub_attackers_perf_by_matchs():
    players_data = {
        'Joueur 1': [(3, 1, 0), (2, 1, 0), (3, 1, 1), (2, 2, 0), (3, 1, 1), (4, 1, 0), (2, 2, 1)],
        'Joueur 2': [(2, 2, 1), (2, 1, 1), (3, 1, 0), (2, 1, 1), (3, 1, 1), (2, 1, 1), (1, 1, 1)],
        'Joueur 3': [(1, 1, 1), (2, 1, 0), (2, 0, 0), (3, 1, 1), (2, 2, 1), (1, 1, 0), (2, 1, 1)],
        'Joueur 4': [(2, 0, 0), (2, 1, 1), (1, 1, 0), (2, 1, 1), (2, 1, 1), (2, 1, 0), (3, 1, 1)],
        'Joueur 5': [(1, 1, 1), (3, 2, 1), (2, 1, 0), (2, 1, 1), (2, 2, 1), (3, 2, 0), (1, 1, 1)],
        'Joueur 6': [(3, 1, 0), (2, 2, 1), (2, 1, 1), (2, 1, 1), (3, 1, 0), (3, 2, 0), (2, 1, 1)],
    }
    return gp.draw_graph_attackers(players_data)

def sub_attackers_perf_global():
    players_data = {
        'Joueur 1': [(2, 2, 0), (1, 0, 0), (2, 1, 1), (3, 2, 1), (3, 1, 1), (3, 2, 1), (1, 1, 0)],
        'Joueur 2': [(2, 2, 1), (2, 1, 0), (3, 2, 2), (2, 1, 1), (2, 1, 1), (2, 2, 0), (3, 2, 1)],
        'Joueur 3': [(1, 1, 1), (1, 1, 0), (2, 0, 0), (2, 1, 1), (3, 2, 2), (1, 1, 1), (1, 1, 0)],
        'Joueur 4': [(1, 0, 0), (2, 1, 1), (2, 1, 1), (1, 1, 1), (2, 1, 0), (1, 0, 0), (2, 2, 1)],
        'Joueur 5': [(3, 1, 1), (2, 1, 1), (2, 1, 1), (1, 1, 0), (2, 2, 0), (3, 2, 1), (3, 2, 1)],
        'Joueur 6': [(2, 1, 1), (2, 2, 1), (2, 2, 1), (1, 0, 0), (2, 1, 1), (2, 2, 1), (1, 1, 1)],
    }
    return gp.draw_graph_attackers(players_data)

def sub_mid_perf_by_matchs():
    players_data = {
        'Joueur 1': [(2, 1, 1, 0), (1, 1, 1, 0), (3, 2, 1, 0), (4, 2, 1, 0), (3, 3, 2, 0), (5, 3, 1, 1), (2, 2, 1, 1)],
        'Joueur 2': [(3, 2, 1, 1), (2, 2, 1, 1), (4, 3, 2, 0), (3, 1, 1, 1), (2, 2, 1, 0), (1, 1, 1, 0), (3, 3, 2, 1)],
        'Joueur 3': [(1, 1, 0, 0), (2, 1, 1, 0), (1, 0, 0, 1), (3, 2, 1, 0), (4, 3, 2, 1), (2, 2, 1, 0), (1, 1, 1, 2)],
        'Joueur 4': [(0, 0, 0, 1), (1, 1, 1, 0), (2, 1, 1, 1), (2, 2, 1, 0), (3, 1, 1, 0), (1, 0, 0, 1), (2, 1, 1, 0)],
        'Joueur 5': [(2, 2, 1, 0), (3, 2, 1, 0), (1, 1, 1, 2), (1, 1, 0, 2), (2, 2, 2, 1), (3, 3, 1, 1), (4, 4, 2, 0)],
        'Joueur 6': [(1, 1, 1, 1), (2, 2, 1, 0), (3, 2, 2, 1), (1, 1, 0, 2), (3, 2, 1, 0), (2, 2, 1, 2), (1, 1, 1, 0)],
    }
    return gp.draw_graph_mid(players_data)
    

def sub_mid_perf_global():
    players_data= {
        'Joueur 1': [(3, 1, 2, 0), (2, 3, 1, 1), (4, 2, 0, 1), (1, 4, 2, 0), (3, 1, 3, 1), (2, 2, 1, 0), (4, 1, 2, 1)],
        'Joueur 2': [(1, 2, 3, 1), (3, 1, 2, 0), (2, 4, 1, 1), (1, 3, 2, 0), (4, 1, 3, 1), (2, 1, 2, 0), (3, 2, 1, 1)],
        'Joueur 3': [(2, 1, 4, 0), (3, 2, 1, 1), (1, 3, 2, 0), (4, 0, 3, 1), (2, 1, 1, 0), (1, 4, 2, 1), (3, 1, 2, 0)],
        'Joueur 4': [(4, 2, 1, 0), (1, 3, 2, 1), (2, 1, 3, 0), (3, 2, 1, 1), (1, 4, 0, 0), (2, 3, 1, 1), (4, 1, 2, 0)],
        'Joueur 5': [(2, 4, 1, 1), (1, 2, 3, 0), (3, 1, 2, 1), (2, 0, 4, 0), (1, 3, 1, 1), (4, 2, 0, 1), (3, 1, 2, 0)],
        'Joueur 6': [(1, 3, 1, 0), (4, 2, 1, 1), (3, 1, 2, 0), (2, 4, 1, 1), (1, 2, 3, 0), (3, 0, 4, 1), (2, 1, 2, 0)],
    }
    return gp.draw_graph_mid(players_data)

def sub_defenders_perf_by_matchs():
    players_data = {
        'Joueur 1': [(1, 0), (1, 0), (1, 0), (1, 0), (2, 0), (1, 1), (1, 1)],
        'Joueur 2': [(1, 1), (1, 1), (2, 0), (1, 1), (1, 0), (1, 0), (2, 1)],
        'Joueur 3': [(0, 0), (1, 0), (0, 1), (1, 0), (2, 1), (1, 0), (1, 2)],
        'Joueur 4': [(0, 1), (1, 0), (1, 1), (1, 0), (1, 0), (0, 1), (1, 0)],
        'Joueur 5': [(1, 0), (1, 0), (1, 2), (0, 2), (2, 1), (1, 1), (2, 0)],
        'Joueur 6': [(1, 1), (1, 0), (2, 1), (0, 2), (1, 0), (1, 2), (1, 0)],
    }
    return gp.draw_graph_defenders(players_data)

def sub_defenders_perf_global():
    players_data = {
        'Joueur 1': [(2, 0), (0, 1), (1, 1), (2, 0), (1, 1), (2, 0), (0, 1)],
        'Joueur 2': [(1, 1), (2, 0), (3, 1), (2, 1), (1, 0), (1, 1), (2, 0)],
        'Joueur 3': [(1, 0), (1, 1), (0, 0), (1, 1), (2, 0), (1, 1), (1, 0)],
        'Joueur 4': [(1, 0), (2, 1), (2, 0), (1, 1), (2, 0), (3, 1), (0, 0)],
        'Joueur 5': [(3, 1), (2, 0), (1, 1), (0, 0), (2, 1), (1, 0), (3, 1)],
        'Joueur 6': [(1, 0), (2, 1), (1, 1), (3, 0), (2, 1), (4, 0), (3, 1)],
    }
    return gp.draw_graph_defenders(players_data)